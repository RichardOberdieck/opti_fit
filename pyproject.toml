[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "opti_fit"
description = 'Project about finding the optimal cutoffs for string matching'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Richard Oberdieck", email = "rico@bankingcircle.com"},
  { name = "Ruben Menke", email = "rum@bankingcircle.com" },
  { name = "Christian Vad Karsten", email = "chk@bankingcircle.com"}
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas==2.2.2",
  "click==8.1.7",
  "mip@git+https://github.com/coin-or/python-mip#egg=0ccb81115543e737ab74a4f1309891ce5650c8d5",
  "gurobipy==11.0.2",
  "tabulate==0.9.0",
  "xlsxwriter==3.2.0",
  "tqdm==4.66.4",
  "highspy==1.7.2"
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/RichardOberdieck/opti_fit/blob/main/README.md"
Issues = "https://github.com/RichardOberdieck/opti_fit/issues"
Source = "https://github.com/RichardOberdieck/opti_fit"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "opti_fit/__init__.py"

[tool.hatch.build]
include = [       
   "opti_fit/*.py",
]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "pre-commit",
]
docs = [
  "mkdocs", 
  "mkdocs-material",
  "mkdocstrings[python]",
  "mkdocs-plotly-plugin"
]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.default.scripts]
solve = "python -m opti_fit.main {args}"
compare = "python -m opti_fit.compare_solvers {args}"

[tool.hatch.envs.test]
dependencies = ["opti_fit[test]"]

[tool.hatch.envs.test.scripts]
base = "pytest {args}"
code_check = "pre-commit run --all-files"

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "opti_fit/__init__.py",
  "tests/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
fail_under = 90

[tool.hatch.envs.docs]
dependencies = ["opti_fit[docs]"]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean"
serve = "mkdocs serve --dev-addr localhost:8000"
deploy = "mkdocs gh-deploy --force"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"
